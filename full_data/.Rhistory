select(text)
marriage_vector <- as.vector(t(marriage_text_col))
df$marriage <- list(marriage_vector)
#extracting count of children
rownum <- nrow(marriage_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
rownum_tibble$spouse <- list(marriage_vector)
#num_children_df = bind_rows(num_children_df, rownum_tibble)
test_marriage_df = bind_rows(test_marriage_df, rownum_tibble)
Sys.sleep(2)
}
View(test_marriage_df)
knitr::opts_chunk$set(echo = TRUE)
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
library(openxlsx)
library(readxl)
library(writexl)
library(dplyr)
temp_marriage_data <- read_excel("test_marriage_num.xlsx")
vector_url_combined <- as.vector(unlist(temp_marriage_data['full_url']))
##create data frame
test_marriage_df <-data.frame()
##loops through the rows -- each url
i = 1
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
#print("count")
print(i)
i = i+1
results_vector_marriage = read_html(value) #read's html of each link page
##getting child
marriage_filter <- results_vector_marriage %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "spouse"))
marriage_filter
marriage_text <- results_vector_marriage  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
#marriage_text
#put the spouse into a vector
marriage_text_col <- marriage_text %>%
select(text)
marriage_vector <- as.vector(t(marriage_text_col))
#df$marriage <- list(marriage_vector)
#extracting count of children
rownum <- nrow(marriage_text)
print(rownum)
rownum_tibble <- tibble(value, rownum, list(marriage_vector))
#num_children_df = bind_rows(num_children_df, rownum_tibble)
test_marriage_df = bind_rows(test_marriage_df, rownum_tibble)
Sys.sleep(2)
}
View(test_marriage_df)
write_xlsx(x = test_marriage_df, path = "test_marriage_data.xlsx", col_names = TRUE)
test_marriage_df
glipmpse(test_marriage_df)
glimpse(test_marriage_df)
##loops through the rows -- each url
i = 1
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
#print("count")
print(i)
i = i+1
results_vector_marriage = read_html(value) #read's html of each link page
##getting child
marriage_filter <- results_vector_marriage %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "spouse"))
marriage_filter
marriage_text <- results_vector_marriage  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
#marriage_text
#put the spouse into a vector
marriage_text_col <- marriage_text %>%
select(text)
marriage_vector <- as.vector(t(marriage_text_col))
#df$marriage <- list(marriage_vector)
#extracting count of children
rownum <- nrow(marriage_text)
print(rownum)
rownum_tibble <- tibble(value, rownum, unlist(marriage_vector))
#num_children_df = bind_rows(num_children_df, rownum_tibble)
test_marriage_df = bind_rows(test_marriage_df, rownum_tibble)
Sys.sleep(2)
}
View(test_marriage_df)
##loops through the rows -- each url
i = 1
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
#print("count")
print(i)
i = i+1
results_vector_marriage = read_html(value) #read's html of each link page
##getting child
marriage_filter <- results_vector_marriage %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "spouse"))
marriage_filter
marriage_text <- results_vector_marriage  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
#marriage_text
#put the spouse into a vector
marriage_text_col <- marriage_text %>%
select(text)
marriage_vector <- as.vector(t(marriage_text_col))
#df$marriage <- list(marriage_vector)
#extracting count of children
rownum <- nrow(marriage_text)
print(rownum)
rownum_tibble <- tibble(value, rownum, list(marriage_vector))
#num_children_df = bind_rows(num_children_df, rownum_tibble)
test_marriage_df = bind_rows(test_marriage_df, rownum_tibble)
Sys.sleep(2)
}
list_vector <- list(marriage_vector)
list_vector <- list(marriage_vector)
list_vector
list_vector <- list(marriage_vector)
list_vector
unlist_vector <- unlist(list_vector)
list_vector <- list(marriage_vector)
list_vector
unlist_vector <- unlist(list_vector)
unlist_vector
list_vector <- list(marriage_vector)
list_vector
unlist_vector <- unlist(list_vector)
unlist_vector
data.frame(unlist_vector)
list_vector <- list(marriage_vector)
list_vector
unlist_vector <- unlist(list_vector)
unlist_vector
string_spouse <- paste(list_vector, collapse=', ' )
list_vector <- list(marriage_vector)
list_vector
unlist_vector <- unlist(list_vector)
unlist_vector
string_spouse <- paste(list_vector, collapse=', ' )
string_spouse
##loops through the rows -- each url
i = 1
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
#print("count")
print(i)
i = i+1
results_vector_marriage = read_html(value) #read's html of each link page
##getting child
marriage_filter <- results_vector_marriage %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "spouse"))
marriage_filter
marriage_text <- results_vector_marriage  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
#marriage_text
#put the spouse into a vector
marriage_text_col <- marriage_text %>%
select(text)
marriage_vector <- as.vector(t(marriage_text_col))
#df$marriage <- list(marriage_vector)
#extracting count of children
rownum <- nrow(marriage_text)
print(rownum)
marriage_list <- list(marriage_vector)
string_spouse <- paste(list_vector, collapse=', ' )
rownum_tibble <- tibble(value, rownum, string_spouse)
#num_children_df = bind_rows(num_children_df, rownum_tibble)
test_marriage_df = bind_rows(test_marriage_df, rownum_tibble)
Sys.sleep(2)
}
View(test_marriage_df)
knitr::opts_chunk$set(echo = TRUE)
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
library(openxlsx)
library(readxl)
library(writexl)
library(dplyr)
temp_marriage_data <- read_excel("test_marriage_num.xlsx")
vector_url_combined <- as.vector(unlist(temp_marriage_data['full_url']))
##create data frame
test_marriage_df <-data.frame()
##loops through the rows -- each url
i = 1
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
#print("count")
print(i)
i = i+1
results_vector_marriage = read_html(value) #read's html of each link page
##getting child
marriage_filter <- results_vector_marriage %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "spouse"))
marriage_filter
marriage_text <- results_vector_marriage  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
#marriage_text
#put the spouse into a vector
marriage_text_col <- marriage_text %>%
select(text)
marriage_vector <- as.vector(t(marriage_text_col))
#df$marriage <- list(marriage_vector)
#extracting count of children
rownum <- nrow(marriage_text)
print(rownum)
marriage_list <- list(marriage_vector)
string_spouse <- paste(marriage_list, collapse=', ' )
rownum_tibble <- tibble(value, rownum, string_spouse)
#num_children_df = bind_rows(num_children_df, rownum_tibble)
test_marriage_df = bind_rows(test_marriage_df, rownum_tibble)
Sys.sleep(2)
}
View(test_marriage_df)
glimpse(test_marriage_df)
write_xlsx(x = test_marriage_df, path = "test_marriage_data.xlsx", col_names = TRUE)
write_xlsx(x = test_marriage_df, path = "test_marriage_data.xlsx", col_names = TRUE)
temp_marriage_data <- read_excel("webscrape_data.xlsx")
vector_url_combined <- as.vector(unlist(temp_marriage_data['full_url']))
##create data frame
test_marriage_df <-data.frame()
##loops through the rows -- each url
i = 1
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
#print("count")
print(i)
i = i+1
results_vector_marriage = read_html(value) #read's html of each link page
##getting child
marriage_filter <- results_vector_marriage %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "spouse"))
marriage_filter
marriage_text <- results_vector_marriage  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
#marriage_text
#put the spouse into a vector
marriage_text_col <- marriage_text %>%
select(text)
marriage_vector <- as.vector(t(marriage_text_col))
#df$marriage <- list(marriage_vector)
#extracting count of children
rownum <- nrow(marriage_text)
print(rownum)
marriage_list <- list(marriage_vector)
string_spouse <- paste(marriage_list, collapse=', ' )
rownum_tibble <- tibble(value, rownum, string_spouse)
#num_children_df = bind_rows(num_children_df, rownum_tibble)
test_marriage_df = bind_rows(test_marriage_df, rownum_tibble)
Sys.sleep(2)
}
View(test_marriage_df)
glimpse(test_marriage_df)
write_xlsx(x = test_marriage_df, path = "spouse_data.xlsx", col_names = TRUE)
full_data <- read_excel("final_combined.xlsx")
marriage_data <- read_excel("spouse_data.xlsx")
full_data <- read_excel("final_combined.xlsx")
marriage_data <- read_excel("spouse_data.xlsx")
marriage_data <- marriage_data %>%
select(rownum, string_spouse)
full_data <- read_excel("final_combined.xlsx")
marriage_data <- read_excel("spouse_data.xlsx")
marriage_data <- marriage_data %>%
select(rownum, string_spouse)
glimpse(marriage_data)
full_data <- read_excel("final_combined.xlsx")
marriage_data <- read_excel("spouse_data.xlsx")
marriage_data <- marriage_data %>%
select(rownum, string_spouse)
glimpse(marriage_data)
marriage_data %>%
mutate(spouse_count = rownum)
full_data <- read_excel("final_combined.xlsx")
marriage_data <- read_excel("spouse_data.xlsx")
marriage_data <- marriage_data %>%
select(rownum, string_spouse)
marriage_data %>%
mutate(spouse_count = rownum)
glimpse(marriage_data)
full_data <- read_excel("final_combined.xlsx")
marriage_data <- read_excel("spouse_data.xlsx")
marriage_data <- marriage_data %>%
mutate(spouse_count = rownum)%>%
select(spouse_count, string_spouse)
glimpse(marriage_data)
full_data <- read_excel("final_combined.xlsx")
marriage_data <- read_excel("spouse_data.xlsx")
marriage_data <- marriage_data %>%
mutate(spouse_count = rownum)%>%
select(spouse_count, string_spouse)
glimpse(marriage_data)
full_data <- bind_cols(full_data, marriage_data)
View(full_data)
write_xlsx(x = full_data, path = "updated_full_df.xlsx", col_names = TRUE)
knitr::opts_chunk$set(echo = TRUE)
emanuel <-  read_html("http://www.vondel.humanities.uva.nl/ecartico/persons/17254")
knitr::opts_chunk$set(echo = TRUE)
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
library(openxlsx)
library(readxl)
library(writexl)
library(dplyr)
emanuel <-  read_html("http://www.vondel.humanities.uva.nl/ecartico/persons/17254")
marriage_filter <- emanuel %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble()
marriage_filter <- emanuel %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number())
marriage_filter
marriage_filter <- emanuel %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "place"))
marriage_filter
marriage_text <- emanuel  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
marriage_text %>%
pull(text)
marriage_text <- emanuel  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
marriage_text
marriage_filter <- emanuel %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "workLocation"))
marriage_filter
marriage_text <- emanuel  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
marriage_text %>%
pull(text)
knitr::opts_chunk$set(echo = TRUE)
marriage_text <- emanuel  %>%
html_nodes(css = "ul:nth-child(12) , #wl16264") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
knitr::opts_chunk$set(echo = TRUE)
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
library(openxlsx)
library(readxl)
library(writexl)
library(dplyr)
marriage_text <- emanuel  %>%
html_nodes(css = "ul:nth-child(12) , #wl16264") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(marriage_filter)
marriage_text <- emanuel  %>%
html_nodes(css = "ul:nth-child(12) , #wl16264") %>%
html_text() %>%
as_tibble()
emanuel <-  read_html("http://www.vondel.humanities.uva.nl/ecartico/persons/17254")
marriage_text <- emanuel  %>%
html_nodes(css = "ul:nth-child(12) , #wl16264") %>%
html_text() %>%
as_tibble()
marriage_text %>%
pull(text)
marriage_text <- emanuel  %>%
html_nodes(css = "ul:nth-child(12) , #wl16264") %>%
html_text() %>%
as_tibble()
emanuel  %>%
html_nodes(css = "ul:nth-child(12) , #wl16264") %>%
html_text() %>%
as_tibble()
marriage_text <- emanuel  %>%
html_nodes(css = "ul:nth-child(12) , #wl16264") %>%
html_text() %>%
as_tibble() %>%
str_trim()
emanuel  %>%
html_nodes(css = "ul:nth-child(12) , #wl16264") %>%
html_text() %>%
as_tibble() %>%
str_trim()
knitr::opts_chunk$set(echo = TRUE)
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
library(openxlsx)
library(readxl)
library(writexl)
library(dplyr)
emanuel <-  read_html("http://www.vondel.humanities.uva.nl/ecartico/persons/17254")
marriage_filter <- emanuel %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "workLocation"))
marriage_filter
emanuel  %>%
html_nodes(css = "ul:nth-child(12) , #wl16264") %>%
html_text() %>%
as_tibble() %>%
str_trim()
emanuel  %>%
html_nodes(css = "ul:nth-child(12) , #wl16264") %>%
html_text() %>%
as_tibble()
emanuel  %>%
html_nodes(css = "ul:nth-child(10)") %>%
html_text() %>%
as_tibble()
emanuel  %>%
html_nodes(css = "ul:nth-child(6)") %>%
html_text() %>%
as_tibble()
