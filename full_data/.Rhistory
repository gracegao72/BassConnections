library(tidyverse)
library('xml2')
library(rvest)
library(openxlsx)
library(readxl)
library(writexl)
library(dplyr)
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
library(openxlsx)
library(readxl)
library(writexl)
library(dplyr)
features_data <- data.frame()
full_data <- read_excel("updated_full_df.xlsx")
vector_url_combined <- as.vector(unlist(full_data['full_url']))
##loops through the rows -- each url
i = 1
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
#print("count")
print(i)
i = i+1
emanuel = read_html(value) #read's html of each link page
#using the computer extension
birthlocation <- emanuel  %>%
html_nodes(css = "tr:nth-child(3) a") %>%
html_text() %>%
as_tibble()
deathlocation <- emanuel  %>%
html_nodes(css = "tr:nth-child(4) a") %>%
html_text() %>%
as_tibble()
##convert into data set
temp_data <- bind_cols(birthlocation, deathlocation, value)
temp_data <- temp_data %>%
rename(
birthLocation = value...1,
deathLocation = value...2,
url = ...3
)
##bind to actual dataset
features_data <- bind_rows(features_data, temp_data)
Sys.sleep(2)
}
write_xlsx(x = features_data, path = "fixed_location.xlsx", col_names = TRUE)
one <- read_excel("final_df.xlsx")
two <- read_excel("fixed_location.xlsx")
final_data <- bind_rows(one, two)
# load packages
library(tidyverse)
library(broom)
library(knitr)
one <- read_excel("final_df.xlsx")
two <- read_excel("fixed_location.xlsx")
final_data <- bind_rows(one, two)
# load packages
library(tidyverse)
library(broom)
library(knitr)
one <- read_excel("final_df.xlsx")
two <- read_excel("fixed_location.xlsx")
final_data <- bind_cols(one, two)
one <- read_excel("final_df.xlsx")
two <- read_excel("fixed_location.xlsx")
one <- read_excel("final_df.xlsx")
two <- read_excel("fixed_location.xlsx")
View(features_new)
View(features_data)
features_data <- data.frame()
vector_url_combined <- as.vector(unlist(full_data['full_url']))
##loops through the rows -- each url
i = 1
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
#print("count")
print(i)
i = i+1
emanuel = read_html(value) #read's html of each link page
#using the computer extension
birthlocation <- emanuel  %>%
html_nodes(css = "tr:nth-child(3) a") %>%
html_text() %>%
as_tibble()
deathlocation <- emanuel  %>%
html_nodes(css = "tr:nth-child(4) a") %>%
html_text() %>%
as_tibble()
##convert into data set
temp_data <- bind_cols(birthlocation, deathlocation, value)
temp_data <- temp_data %>%
rename(
birthLocation = value...1,
deathLocation = value...2,
url = ...3
)
##bind to actual dataset
features_data <- bind_rows(features_data, temp_data)
Sys.sleep(2)
}
final_dataset <- read_excel("final_df.xlsx")
locations <- read_excel("fixed_location.xlsx")
View(locations)
ggplot(data = locations, aes(x = birthLocation)) +
geom_histogram(bins = 20) +
labs(x = "Height (cm)",
y = "Count",
title = "Distribution of Height for Ikea's Bookcases or Shelves")
ggplot(data = locations, aes(x = birthLocation)) +
geom_bar() +
labs(x = "Height (cm)",
y = "Count",
title = "Distribution of Height for Ikea's Bookcases or Shelves")
ggplot(data = locations, aes(x = birthLocation)) +
geom_bar() +
labs(x = "Height (cm)",
y = "Count",
title = "Distribution of Height for Ikea's Bookcases or Shelves")
data %>%
count(birthLocation) %>%
arrange(desc(n))
ggplot(data = locations, aes(x = birthLocation)) +
geom_bar() +
labs(x = "Height (cm)",
y = "Count",
title = "Distribution of Height for Ikea's Bookcases or Shelves")
locations %>%
count(birthLocation) %>%
arrange(desc(n))
ggplot(data = locations, aes(x = birthLocation)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
locations %>%
count(birthLocation) %>%
arrange(desc(n))
ggplot(data = locations, aes(x = deathLocation)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
locations %>%
count(birthLocation) %>%
arrange(desc(n))
ggplot(data = locations, aes(x = birthLocation)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
locations %>%
count(birthLocation) %>%
arrange(desc(n))
ggplot(data = locations, aes(x = birthLocation)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
locations %>%
count(birthLocation) %>%
arrange(desc(n))
ggplot(data = locations, aes(x = deathLocation)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
locations %>%
count(deathLocation) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = gender)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
locations %>%
count(deathLocation) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = gender)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
final_dataset %>%
count(gender) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = gender)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
# Basic piechart
ggplot(=final_dataset, aes(x="", y=value, fill=gender)) +
ggplot(data = final_dataset, aes(x = gender)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=gender)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
final_dataset %>%
count(gender) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = child_num)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
final_dataset %>%
count(gender) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = child_num)) +
geom_bar() +
labs(x = "Number of Children",
y = "Count",
title = "Distribution of Number of Children")
final_dataset %>%
count(child_num) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = spouse_count)) +
geom_bar() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(spouse_count) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = birth_year)) +
geom_histogram() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
ggplot(data = final_dataset, aes(x = birth_year), stat = "count") +
geom_histogram() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
ggplot(data = final_dataset, aes(x = birth_year)) +
stat_count() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(spouse_count) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = birth_year)) +
stat_count(bins = 20) +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(spouse_count) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = birth_year)) +
stat_count(bins = 50) +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(spouse_count) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = birth_year)) +
stat_count() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(birth_year) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = final_dataset, aes(x = birth_year)) +
stat_count() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(birth_year) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
stat_count() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(birth_year) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
stat_count(bin = 20) +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(birth_year) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
stat_count() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
birth_year_new %>%
count(birth_year) %>%
arrange(desc(n))
death_year_new <- final_dataset %>%
filter(death_year != "?")
ggplot(data = death_year_new, aes(x = death_year)) +
stat_count() +
labs(x = "Year",
y = "Count",
title = "Distribution of Death Year")
death_year_new %>%
count(death_year) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
stat_count() +
labs(x = "Year",
y = "Count",
title = "Distribution of Birth Year")
birth_year_new %>%
count(birth_year) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=painter)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
final_dataset %>%
count(painter) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
final_dataset %>%
case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter")
final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
final_dataset <- final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
geom_bar() +
labs(x = "Year",
y = "Count",
title = "Distribution of Birth Year")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=gender)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
geom_bar() +
labs(x = "Year",
y = "Count",
title = "Distribution of Birth Year")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=painter)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
birth_year_new %>%
count(birth_year) %>%
arrange(desc(n))
final_dataset <-final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
ggplot(data = final_dataset, aes(x = painter)) +
stat_count() +
labs(x = "Year",
y = "Count",
title = "Distribution of Painter")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
final_dataset <-final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=painter)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
final_dataset <-final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=painter)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
final_dataset <-final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
final_dataset <-final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
View(final_data)
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
stat_count() +
labs(x = "Year",
y = "Count",
title = "Distribution of Birth Year")
birth_year_new %>%
count(birth_year) %>%
arrange(desc(n))
death_year_new <- final_dataset %>%
filter(death_year != "?")
# load packages
library(tidyverse)
library(broom)
library(knitr)
final_dataset <- read_excel("final_df.xlsx")
death_year_new <- final_dataset %>%
filter(death_year != "?")
ggplot(data = death_year_new, aes(x = death_year)) +
stat_count() +
labs(x = "Year",
y = "Count",
title = "Distribution of Death Year")
death_year_new %>%
count(death_year) %>%
arrange(desc(n))
ggplot(data = locations, aes(x = deathLocation)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
locations %>%
count(deathLocation) %>%
arrange(desc(n))
ggplot(data = locations, aes(x = birthLocation)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
locations %>%
count(birthLocation) %>%
arrange(desc(n))
