labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
# Basic piechart
ggplot(=final_dataset, aes(x="", y=value, fill=gender)) +
ggplot(data = final_dataset, aes(x = gender)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=gender)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
final_dataset %>%
count(gender) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = child_num)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
final_dataset %>%
count(gender) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = child_num)) +
geom_bar() +
labs(x = "Number of Children",
y = "Count",
title = "Distribution of Number of Children")
final_dataset %>%
count(child_num) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = spouse_count)) +
geom_bar() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(spouse_count) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = birth_year)) +
geom_histogram() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
ggplot(data = final_dataset, aes(x = birth_year), stat = "count") +
geom_histogram() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
ggplot(data = final_dataset, aes(x = birth_year)) +
stat_count() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(spouse_count) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = birth_year)) +
stat_count(bins = 20) +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(spouse_count) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = birth_year)) +
stat_count(bins = 50) +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(spouse_count) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = birth_year)) +
stat_count() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(birth_year) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = final_dataset, aes(x = birth_year)) +
stat_count() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(birth_year) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
stat_count() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(birth_year) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
stat_count(bin = 20) +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
final_dataset %>%
count(birth_year) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
stat_count() +
labs(x = "Number of Marriages",
y = "Count",
title = "Distribution of Number of Marriages")
birth_year_new %>%
count(birth_year) %>%
arrange(desc(n))
death_year_new <- final_dataset %>%
filter(death_year != "?")
ggplot(data = death_year_new, aes(x = death_year)) +
stat_count() +
labs(x = "Year",
y = "Count",
title = "Distribution of Death Year")
death_year_new %>%
count(death_year) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
stat_count() +
labs(x = "Year",
y = "Count",
title = "Distribution of Birth Year")
birth_year_new %>%
count(birth_year) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=painter)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
final_dataset %>%
count(painter) %>%
arrange(desc(n))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
final_dataset %>%
case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter")
final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
final_dataset <- final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
geom_bar() +
labs(x = "Year",
y = "Count",
title = "Distribution of Birth Year")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=gender)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
geom_bar() +
labs(x = "Year",
y = "Count",
title = "Distribution of Birth Year")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=painter)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
birth_year_new %>%
count(birth_year) %>%
arrange(desc(n))
final_dataset <-final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
ggplot(data = final_dataset, aes(x = painter)) +
stat_count() +
labs(x = "Year",
y = "Count",
title = "Distribution of Painter")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
final_dataset <-final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=painter)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
final_dataset <-final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
# Basic piechart
ggplot(final_dataset, aes(x="", y=value, fill=painter)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
final_dataset <-final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
final_dataset <-final_dataset %>%
mutate(painter = case_when(painter == 1 ~ "painter",
painter == 0 ~ "nonpainter"))
ggplot(data = final_dataset, aes(x = painter)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Painters and NonPainters")
final_dataset %>%
count(painter) %>%
arrange(desc(n))
View(final_data)
birth_year_new <- final_dataset %>%
filter(birth_year != "?")
ggplot(data = birth_year_new, aes(x = birth_year)) +
stat_count() +
labs(x = "Year",
y = "Count",
title = "Distribution of Birth Year")
birth_year_new %>%
count(birth_year) %>%
arrange(desc(n))
death_year_new <- final_dataset %>%
filter(death_year != "?")
# load packages
library(tidyverse)
library(broom)
library(knitr)
final_dataset <- read_excel("final_df.xlsx")
death_year_new <- final_dataset %>%
filter(death_year != "?")
ggplot(data = death_year_new, aes(x = death_year)) +
stat_count() +
labs(x = "Year",
y = "Count",
title = "Distribution of Death Year")
death_year_new %>%
count(death_year) %>%
arrange(desc(n))
ggplot(data = locations, aes(x = deathLocation)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
locations %>%
count(deathLocation) %>%
arrange(desc(n))
ggplot(data = locations, aes(x = birthLocation)) +
geom_bar() +
labs(x = "Location",
y = "Count",
title = "Distribution of Birth Locations")
locations %>%
count(birthLocation) %>%
arrange(desc(n))
# load packages
library(tidyverse)
library(broom)
library(knitr)
library(yardstick)
package.install('yardstick')
final_data <- read_excel("final_df.xlsx")
final_data <- read_excel("final_df.xlsx")
# load packages
library(tidyverse)
library(broom)
library(knitr)
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
library(openxlsx)
library(readxl)
library(writexl)
library(dplyr)
final_data <- read_excel("final_df.xlsx")
View(final_data)
final_data <- final_df %>%
mutate(birth_year_cent = birth_year - mean(birth_year))
final_data <- final_data %>%
mutate(birth_year_cent = birth_year - mean(birth_year))
final_data <- final_data %>%
filter(birth_year != "?") %>%
mutate(birth_year_cent = birth_year - mean(birth_year))
final_data <- final_data %>%
filter(birth_year != "?") %>%
mutate(birth_year_cent = as.numeric(birth_year) - mean(as.numeric(birth_year)))
new_data <- final_data %>%
filter(birth_year != "?") %>%
mutate(birth_year_cent = as.numeric(birth_year) - mean(as.numeric(birth_year)))
new_data <- final_data %>%
filter(birth_year != "?") %>%
mutate(birth_year_cent = as.numeric(birth_year) - mean(as.numeric(birth_year)))
new_data %>%
count(birth_year_cent)
new_data <- final_data %>%
filter(birth_year != "?") %>%
mutate(birth_year_cent = as.numeric(birth_year) - mean(as.numeric(birth_year)))
new_data_2 %>%
filter(death_year!="?") %>%
mutate(death_year_cent = as.numeric(death_year) - mean(as.numeric(death_year)))
new_data <- final_data %>%
filter(birth_year != "?") %>%
mutate(birth_year_cent = as.numeric(birth_year) - mean(as.numeric(birth_year)))
new_data_2 <- new_data %>%
filter(death_year!="?") %>%
mutate(death_year_cent = as.numeric(death_year) - mean(as.numeric(death_year)))
new_data <- final_data %>%
filter(birth_year != "?") %>%
mutate(birth_year_cent = as.numeric(birth_year) - mean(as.numeric(birth_year)))
new_data_2 <- new_data %>%
filter(death_year!="?") %>%
mutate(death_year_cent = as.numeric(death_year) - mean(as.numeric(death_year)))
new_data_2 <- new_data_2 %>%
mutate(antwerp = case_when(
antwerp == 1 ~ "antwerp",
TRUE ~ "not antwerp"
))
amsterdam_model <- glm(as.factor(amsterdam) ~ death_year_cent + birth_year_cent +
gender + as.factor(antwerp) + as.factor(painter) +
as.factor(engraver_etcher) +
as.factor(print_book_publish) + as.factor(gold_silver_smith) +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(amsterdam_model)
amsterdam_model <- glm(as.factor(amsterdam) ~ death_year_cent + birth_year_cent +
gender + as.factor(antwerp) + as.factor(painter) +
as.factor(engraver_etcher) +
as.factor(print_book_publish) + as.factor(gold_silver_smith) +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(amsterdam_model)
amsterdam_model <- glm(amsterdam ~ death_year_cent + birth_year_cent +
gender + antwerp + painter +
engraver_etcher +
print_book_publish + gold_silver_smith +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(amsterdam_model)
# load packages
library(tidyverse)
library(broom)
library(knitr)
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
library(openxlsx)
library(readxl)
library(writexl)
library(dplyr)
final_data <- read_excel("final_df.xlsx")
new_data <- final_data %>%
filter(birth_year != "?") %>%
mutate(birth_year_cent = as.numeric(birth_year) - mean(as.numeric(birth_year)))
new_data_2 <- new_data %>%
filter(death_year!="?") %>%
mutate(death_year_cent = as.numeric(death_year) - mean(as.numeric(death_year)))
amsterdam_model <- glm(amsterdam ~ death_year_cent + birth_year_cent +
gender + antwerp + painter +
engraver_etcher +
print_book_publish + gold_silver_smith +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(amsterdam_model)
# load packages
library(tidyverse)
library(broom)
library(knitr)
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
library(openxlsx)
library(readxl)
library(writexl)
library(dplyr)
final_data <- read_excel("final_df.xlsx")
new_data <- final_data %>%
filter(birth_year != "?") %>%
mutate(birth_year_cent = as.numeric(birth_year) - mean(as.numeric(birth_year)))
new_data_2 <- new_data %>%
filter(death_year!="?") %>%
mutate(death_year_cent = as.numeric(death_year) - mean(as.numeric(death_year)))
amsterdam_model <- glm(as.factor(amsterdam) ~ death_year_cent + birth_year_cent +
gender + as.factor(antwerp) + as.factor(painter) +
as.factor(engraver_etcher) +
as.factor(print_book_publish) + as.factor(gold_silver_smith) +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(amsterdam_model)
antwerp_model <- glm(as.factor(antwerp) ~ death_year_cent + birth_year_cent +
gender + as.factor(amsterdam) + as.factor(painter) +
as.factor(engraver_etcher) +
as.factor(print_book_publish) + as.factor(gold_silver_smith) +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(antwerp_model)
amsterdam_model <- glm(as.factor(amsterdam) ~ death_year_cent + birth_year_cent +
gender + as.factor(antwerp) + as.factor(painter) +
as.factor(engraver_etcher) +
as.factor(print_book_publish) + as.factor(gold_silver_smith) +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(amsterdam_model)
antwerp_model <- glm(as.factor(antwerp) ~ death_year_cent + birth_year_cent +
gender + as.factor(amsterdam) + as.factor(painter) +
as.factor(engraver_etcher) +
as.factor(print_book_publish) + as.factor(gold_silver_smith) +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(antwerp_model) %>%
kabble()
antwerp_model <- glm(as.factor(antwerp) ~ death_year_cent + birth_year_cent +
gender + as.factor(amsterdam) + as.factor(painter) +
as.factor(engraver_etcher) +
as.factor(print_book_publish) + as.factor(gold_silver_smith) +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(antwerp_model) %>%
kable()
antwerp_model <- glm(as.factor(antwerp) ~ death_year_cent + birth_year_cent +
gender + as.factor(amsterdam) + as.factor(painter) +
as.factor(engraver_etcher) +
as.factor(print_book_publish) + as.factor(gold_silver_smith) +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(antwerp_model) %>%
kable(digits = 5)
amsterdam_model <- glm(as.factor(amsterdam) ~ death_year_cent + birth_year_cent +
gender + as.factor(antwerp) + as.factor(painter) +
as.factor(engraver_etcher) +
as.factor(print_book_publish) + as.factor(gold_silver_smith) +
child_num + spouse_count,
data = new_data_2,
family = "binomial")
tidy(amsterdam_model) %>%
kable(digits = 5)
