for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
results_vector_children = read_html(value) #read's html of each link page
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
library("readxl")
library(tidyverse)
library('xml2')
temp_children_data <- read_excel("combined_data_r.xlsx")
vector_url_combined <- as.vector(unlist(temp_children_data['full_url']))
##create data frame
num_children_df <- data.frame()
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
results_vector_children = read_html(value) #read's html of each link page
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
results_vector_children = read_html(value) #read's html of each link page
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
download.file(value, destfile = "scrapedpage.html", quiet = TRUE)
results_vector_children <- read_html("scrapedpage.html") #read's html of each link page
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
download.file(value, destfile = 'scrapedpage.html', quiet = TRUE)
results_vector_children = read_html("scrapedpage.html") #read's html of each link page
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
## results_vector_children = read_html(value) #read's html of each link page
con <- url(value, "rb")
results_vector_children <- read_html(con)
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
# http://www.vondel.humanities.uva.nl/ecartico/persons/10579
# schema:children
emanuel <-  read_html("http://www.vondel.humanities.uva.nl/ecartico/persons/39079")
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
temp_children_data <- read_excel("combined_data_r.xlsx")
vector_url_combined <- as.vector(unlist(temp_children_data['full_url']))
##create data frame
num_children_df <- data.frame()
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
results_vector_children = read_html(value) #read's html of each link page
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
# http://www.vondel.humanities.uva.nl/ecartico/persons/10579
# schema:children
emanuel <-  read_html("http://www.vondel.humanities.uva.nl/ecartico/persons/39079")
# http://www.vondel.humanities.uva.nl/ecartico/persons/10579
# schema:children
emanuel <-  read_html("http://www.vondel.humanities.uva.nl/ecartico/persons/39079")
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
#results_vector_children = read_html(value) #read's html of each link page
download.file(value, destfile = "scrapedpage.html", quiet=TRUE)
results_vector_children <- read_html("scrapedpage.html")
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
options(timeout= 4000000)
print(value)
results_vector_children = read_html(value) #read's html of each link page
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
results_vector_children = read_html(value) #read's html of each link page
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
Sys.sleep()
}
temp_children_data <- read_excel("temp_children.xlsx")
vector_url_combined <- as.vector(unlist(temp_children_data['full_url']))
##create data frame
num_children_df <- data.frame()
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
results_vector_children = read_html(value) #read's html of each link page
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
#results_vector_children = read_html(value) #read's html of each link page
read_html(curl(value, handle = curl::new_handle("useragent" = "Mozilla/5.0")))
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
rownum <- nrow(child_text)
print(rownum)
# http://www.vondel.humanities.uva.nl/ecartico/persons/10579
# schema:children
emanuel <-  read_html("http://www.vondel.humanities.uva.nl/ecartico/persons/39079")
# http://www.vondel.humanities.uva.nl/ecartico/persons/10579
# schema:children
emanuel <-  read_html("http://www.vondel.humanities.uva.nl/ecartico/persons/10579")
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
# results_vector_children = read_html(value) #read's html of each link page
tryCatch(results_vector_children<- my_urls[i] %>% GET(., timeout(2)) %>% read_html,
error = function(e) { results_vector_children <<- "Timed out!" } )
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
temp_children_data <- read_excel("combined_data_r.xlsx")
vector_url_combined <- as.vector(unlist(temp_children_data['full_url']))
##create data frame
num_children_df <- data.frame()
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
# results_vector_children = read_html(value) #read's html of each link page
tryCatch(results_vector_children<- my_urls[i] %>% GET(., timeout(2)) %>% read_html,
error = function(e) { results_vector_children <<- "Timed out!" } )
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
##loops through the rows -- each url
for(value in vector_url_combined){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
print(value)
results_vector_children = read_html(value) #read's html of each link page
##getting child
child_filter <- results_vector_children %>%
html_nodes("ul li a") %>%
html_attr("rel") %>%
as_tibble() %>%
mutate(id = row_number()) %>%
filter(str_detect(value, "children"))
child_filter
child_text <- results_vector_children  %>%
html_nodes("ul li a") %>%
html_text() %>%
as_tibble() %>%
rename(text = value) %>%
mutate(id = row_number()) %>%
inner_join(child_filter)
rownum <- nrow(child_text)
print(rownum)
rownum_tibble <- tibble(value, rownum)
num_children_df = bind_rows(num_children_df, rownum_tibble)
}
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
Sys.env()
library("readxl")
library(tidyverse)
library('xml2')
library(rvest)
temp_children_data <- read_excel("combined_data_r.xlsx")
knitr::opts_chunk$set(echo = TRUE)
amsterdam_painter_url_data <- read_csv("data/amsterdam_painter_url.csv")
amsterdam_painter_df = data.frame()
vector_painter_amsterdam <- as.vector(unlist(amsterdam_painter_url_data['full_url']))
#http://www.vondel.humanities.uva.nl/ecartico/persons/index.php?occupation_id=130%2C209&subjectmat=&place=Amsterdam&gender=male&year_start=1506&year_end=1725&formtype=selections&page=41&subtask=selections
##loops through the rows -- each url
for(value in vector_painter_amsterdam){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
#print(value)
results_amsterdam_painter = read_html(value) #read's html of each link page
##getting text
names_amsterdam_painter <- results_amsterdam_painter %>%
html_nodes("li") %>%
html_text()
##parsing individual link
url_amsterdam_painter <- results_amsterdam_painter %>%
html_nodes("li a") %>%
html_attr("href")
##puts the url and names into a tibble
results_df_amsterdam_painter <- tibble(names_amsterdam_painter, url_amsterdam_painter)
results_df_amsterdam_painter <- results_df_amsterdam_painter[-c(1,2,3,4),]
#bind the url to the final dataset
amsterdam_painter_df = bind_rows(amsterdam_painter_df, results_df_amsterdam_painter)
}
results_amsterdam_painter_fem = read_html("http://www.vondel.humanities.uva.nl/ecartico/persons/index.php?occupation_id=130%2C209&subjectmat=&place=Amsterdam&gender=female&year_start=1506&year_end=1725&formtype=selections&page=1&subtask=selections") #read's html of each link page
vector_painter_amsterdam <- as.vector(unlist(amsterdam_painter_url_data['full_url']))
#http://www.vondel.humanities.uva.nl/ecartico/persons/index.php?occupation_id=130%2C209&subjectmat=&place=Amsterdam&gender=male&year_start=1506&year_end=1725&formtype=selections&page=41&subtask=selections
##loops through the rows -- each url
for(value in vector_painter_amsterdam){
#print(antwerp_engraver_url_data[i, ])
#antwerp_engraver_link = antwerp_engraver_url_data[i, ]
#print(value)
results_amsterdam_painter = read_html(value) #read's html of each link page
##getting text
names_amsterdam_painter <- results_amsterdam_painter %>%
html_nodes("li") %>%
html_text()
##parsing individual link
url_amsterdam_painter <- results_amsterdam_painter %>%
html_nodes("li a") %>%
html_attr("href")
##puts the url and names into a tibble
results_df_amsterdam_painter <- tibble(names_amsterdam_painter, url_amsterdam_painter)
results_df_amsterdam_painter <- results_df_amsterdam_painter[-c(1,2,3,4),]
#bind the url to the final dataset
amsterdam_painter_df = bind_rows(amsterdam_painter_df, results_df_amsterdam_painter)
}
